#include <stdio.h>
#include <stdlib.h>

// Function to find the smallest positive missing number
int findMissingPositive(int arr[], int size) {
    int i, j;
    
    // Separate positive numbers
    j = 0;
    for (i = 0; i < size; i++) {
        if (arr[i] <= 0) {
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            j++;
        }
    }
    
    // Iterate over positive numbers, mark their presence
    for (i = j; i < size; i++) {
        if (abs(arr[i]) - 1 < size - j && arr[abs(arr[i]) - 1 + j] > 0) {
            arr[abs(arr[i]) - 1 + j] = -arr[abs(arr[i]) - 1 + j];
        }
    }
    
    // Find the first positive missing number
    for (i = j; i < size; i++) {
        if (arr[i] > 0) {
            return i - j + 1;
        }
    }
    
    return size - j + 1;
}

int main() {
    int arr1[] = {2, 3, 7, 6, 8, -1, -10, 15};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);
    printf("Output for arr1[]: %d\n", findMissingPositive(arr1, size1));

    int arr2[] = {2, 3, -7, 6, 8, 1, -10, 15};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);
    printf("Output for arr2[]: %d\n", findMissingPositive(arr2, size2));

    int arr3[] = {1, 1, 0, -1, -2};
    int size3 = sizeof(arr3) / sizeof(arr3[0]);
    printf("Output for arr3[]: %d\n", findMissingPositive(arr3, size3));

    return 0;
}
